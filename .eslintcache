[{"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\index.js":"1","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\reportWebVitals.js":"2","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\App.js":"3","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\configureStore.js":"4","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\About.js":"5","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\ActionCreators.js":"6","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Home.js":"7","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Team.js":"8","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\HeaderComponent.js":"9","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Support.js":"10","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Register.js":"11","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\MyAccount.js":"12","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\FooterComponent.js":"13","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\team.js":"14","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\forms.js":"15","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\jwt.js":"16","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\user.js":"17","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\Actions.js":"18","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\services\\UserServices.js":"19","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\services\\TeamServices.js":"20","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\shared\\baseUrl.js":"21","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\accounts\\actions.js":"22","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\AccountComponent.js":"23","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\AccountModal.js":"24","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\TransactionComponent.js":"25","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\TransactionHistoryComponent.js":"26","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\TransferComponent.js":"27"},{"size":836,"mtime":1613113542230,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":1871,"mtime":1613446274141,"results":"31","hashOfConfig":"29"},{"size":901,"mtime":1613459487969,"results":"32","hashOfConfig":"29"},{"size":2288,"mtime":1613079254844,"results":"33","hashOfConfig":"29"},{"size":1639,"mtime":1613847262770,"results":"34","hashOfConfig":"29"},{"size":3115,"mtime":1614104417408,"results":"35","hashOfConfig":"29"},{"size":1085,"mtime":1612569772591,"results":"36","hashOfConfig":"29"},{"size":1094,"mtime":1613461623392,"results":"37","hashOfConfig":"29"},{"size":4552,"mtime":1613262500308,"results":"38","hashOfConfig":"29"},{"size":7407,"mtime":1614104677089,"results":"39","hashOfConfig":"29"},{"size":6973,"mtime":1613970002622,"results":"40","hashOfConfig":"29"},{"size":524,"mtime":1612570729754,"results":"41","hashOfConfig":"29"},{"size":543,"mtime":1613162514833,"results":"42","hashOfConfig":"29"},{"size":381,"mtime":1613720773618,"results":"43","hashOfConfig":"29"},{"size":340,"mtime":1613344677446,"results":"44","hashOfConfig":"29"},{"size":2095,"mtime":1613339770098,"results":"45","hashOfConfig":"29"},{"size":1730,"mtime":1613260708314,"results":"46","hashOfConfig":"29"},{"size":930,"mtime":1613462591568,"results":"47","hashOfConfig":"29"},{"size":203,"mtime":1613116263310,"results":"48","hashOfConfig":"29"},{"size":185,"mtime":1613338054960,"results":"49","hashOfConfig":"29"},{"size":1141,"mtime":1613167029334,"results":"50","hashOfConfig":"29"},{"size":5057,"mtime":1614016927431,"results":"51","hashOfConfig":"29"},{"size":4252,"mtime":1614018270763,"results":"52","hashOfConfig":"29"},{"size":3015,"mtime":1613967556975,"results":"53","hashOfConfig":"29"},{"size":6333,"mtime":1613962964612,"results":"54","hashOfConfig":"29"},{"size":2828,"mtime":1614018887956,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1aaf9vk",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\index.js",[],["115","116"],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\reportWebVitals.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\App.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\configureStore.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\About.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\ActionCreators.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Home.js",["117","118","119","120","121","122"],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Team.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\HeaderComponent.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Support.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Register.js",["123","124","125"],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\MyAccount.js",["126","127","128","129","130","131","132","133","134","135","136","137","138"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { baseUrlAWS } from '../shared/baseUrl';\r\nimport '../index.css';\r\nimport { ListGroupItem, ListGroup, Button, Table, Modal, ModalHeader, ModalBody, ModalFooter, Form, Label, Input } from 'reactstrap';\r\n//import { Link } from 'react-router-dom';\r\nimport { PersonCircle, Gear, ArrowClockwise } from 'react-bootstrap-icons';\r\nimport {useDispatch, connect} from 'react-redux';\r\nimport Accounts from '../components/AccountComponent';\r\nimport { addUser } from '../redux/ActionCreators';\r\nimport AccountModal from '../components/AccountModal';\r\n\r\n\r\n//import { getChecking } from '../redux/accounts/actions';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useParams,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\n\r\nexport const CheckingAccount = () => {\r\n\r\n}\r\nexport const BusinessAccounts = () => {\r\n\r\n  return (\r\n    <>my acccount</>\r\n  )\r\n}\r\nexport const SavingsAccount = () => {\r\n\r\n  return (\r\n    <>my acccount</>\r\n  )\r\n}\r\n\r\nexport const CDAccounts = () => {\r\n\r\n  return (\r\n    <>my acccount</>\r\n  )\r\n}\r\n\r\nexport const IRAAccount = (store) => {\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h3> </h3>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h2>Current Balance</h2>\r\n          <h1>$100.00</h1>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <Button block color=\"danger\">Delete Account</Button>\r\n          <Button block color=\"primary\">Create Transaction</Button>\r\n          <Button block color=\"warning\">Delete Transaction</Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\" >\r\n        <div className=\"col\">\r\n        <hr />\r\n        <Table striped dark>\r\n    <thead>\r\n      <tr>\r\n        <th>Transaction</th>\r\n        <th>Amount</th>\r\n        <th>Date</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>Mac Dondald's</td>\r\n        <td>-$652.00</td>\r\n        <td>10/10/2019</td>\r\n      </tr>\r\n      <tr>\r\n        <td>What a Burger</td>\r\n        <td>-$889.99</td>\r\n        <td>12/10/2020</td>\r\n      </tr>\r\n    </tbody>\r\n  </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const RothIRA = () => {\r\n\r\n  return (\r\n    <>my acccount</>\r\n  )\r\n}\r\n\r\nexport const RolloverIRA = () => {\r\n\r\n  return (\r\n    <>my acccount</>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nfunction MyAccount(props) {\r\n\r\n  const data = {\r\n\r\n  }\r\n\r\n  const user = props.user;\r\n  const jwt = props.jwt.jwt;\r\n\r\n  const reloadUser = async (event) => {\r\n//    alert(baseUrlAWS + 'api/Me ' + `Bearer ${props.jwt.jwt}`);\r\n    axios.get(baseUrlAWS + 'api/Me', { headers: {\"Authorization\" : `Bearer ${jwt}`}})\r\n    .then((response) => props.dispatch(addUser(response.data)));\r\n\r\n  }\r\n\r\n  let { path, url } = useRouteMatch();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Button onClick={reloadUser}><ArrowClockwise /> Reload</Button>\r\n      <hr />\r\n      <div id=\"maxheight\" className=\"row\">\r\n      <ListGroup>\r\n      <AccountModal jwt={props.jwt} user={props.user} />\r\n      <p/>\r\n        <ListGroupItem style={{backgroundColor: '#50AEEC', color: 'black', textAlign: 'center'}}>\r\n          <PersonCircle />\r\n          <> My Accounts </>\r\n        </ListGroupItem>\r\n        <Link to={`/account/checking-accounts`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            Checking Account\r\n          </ListGroupItem>\r\n        </Link>\r\n\r\n        <Link to={`/account/dba-accounts`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            Business Accounts\r\n            </ListGroupItem>\r\n        </Link>\r\n\r\n        <Link to={`/account/savings-accounts`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            Saving Account\r\n          </ListGroupItem>\r\n        </Link>\r\n\r\n        <ListGroupItem style={{backgroundColor: '#50AEEC', color: 'black', textAlign: 'center'}}>\r\n          <PersonCircle />\r\n          <> My Investments </>\r\n\r\n        </ListGroupItem>\r\n\r\n        <Link to={`/account/cd-accounts`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            CD Accounts\r\n            </ListGroupItem>\r\n        </Link>\r\n\r\n        <Link to={`/account/ira-accounts`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            IRA Account\r\n            </ListGroupItem>\r\n        </Link>\r\n\r\n        <Link to={`/account/roth-ira`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            Roth IRA\r\n          </ListGroupItem>\r\n        </Link>\r\n        <Link to={`/account/rollover-ira`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            Rollover IRA\r\n          </ListGroupItem>\r\n        </Link>\r\n\r\n        {/* <ListGroupItem tag=\"button\" action>Account</ListGroupItem> */}\r\n        <ListGroupItem tag=\"button\" action>CD Rates</ListGroupItem>\r\n        <ListGroupItem disabled style={{backgroundColor: '#50AEEC', color: 'black'}}><Gear /> Settings</ListGroupItem>\r\n        <ListGroupItem tag=\"button\" action>Profile</ListGroupItem>\r\n        <ListGroupItem tag=\"button\" action>Account Data</ListGroupItem>\r\n      </ListGroup>\r\n\r\n      <div className=\"col-8\">\r\n      <Switch>\r\n        {/* <Route exact path={path}>\r\n          < />\r\n        </Route> */}\r\n        <Route path={`${path}/checking-accounts`} component={() => <Accounts user={props.user} transactionAcctType=\"checking\" accountType=\"Personal Checking Account\" jwt={jwt} accounts={user.checkingAccounts} />} />\r\n\r\n        <Route path={`${path}/dba-accounts`} component={() => <Accounts user={props.user} transactionAcctType=\"dbaChecking\" accountType=\"Business Accounts\" jwt={jwt} accounts={user.dbaCheckings} />} />\r\n\r\n        <Route path={`${path}/savings-accounts`} component={() => <Accounts user={props.user} transactionAcctType=\"savings\" accountType=\"Savings Account\" jwt={jwt} accounts={user.savingsAccounts} />} />\r\n\r\n        <Route path={`${path}/cd-accounts`} component={() => <Accounts user={props.user} transactionAcctType=\"cdAccount\" accountType=\"CD Account\" jwt={jwt} accounts={user.cDAccounts} />} />\r\n\r\n        <Route path={`${path}/ira-accounts`} component={() => <Accounts user={props.user} transactionAcctType=\"ira\" accountType=\"IRA Account\" jwt={jwt} accounts={user.ira} />} />\r\n\r\n        <Route path={`${path}/roth-ira`} component={() => <Accounts user={props.user} transactionAcctType=\"rothIRA\" accountType=\"Roth IRA Account\" jwt={jwt} accounts={user.rothIRA} />} />\r\n\r\n        <Route path={`${path}/rollover-ira`} component={() => <Accounts user={props.user} transactionAcctType=\"rolloverIRA\" accountType=\"Rollover IRA Account\" jwt={jwt} accounts={user.rollOverIRA} />} />\r\n\r\n      </Switch>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n const mapDispatchToProps = (dispatch) => ({\r\n   addUser: () => dispatch(addUser())\r\n });\r\n//\r\n// const mapStateToProps = (dispatch) => ({\r\n//   getChecking: (values) => { dispatch (getChecking(values))},\r\n//   user: dispatch.userStatus.userName,\r\n//   token: dispatch.userStatus.jwt\r\n// });\r\n\r\n\r\nexport default connect(mapDispatchToProps)(MyAccount);\r\n//export default MyAccount;\r\n","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\FooterComponent.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\team.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\forms.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\jwt.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\user.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\Actions.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\services\\UserServices.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\services\\TeamServices.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\shared\\baseUrl.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\accounts\\actions.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\AccountComponent.js",["139","140","141"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { Media, Row, Table, Button } from 'reactstrap';\r\nimport { format } from 'date-fns';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport TransactionComponent from './TransactionComponent';\r\nimport TransactionHistoryComponent from './TransactionHistoryComponent';\r\nimport TransferComponent from './TransferComponent';\r\nimport { addUser } from '../redux/ActionCreators';\r\nimport { baseUrlAWS } from '../shared/baseUrl';\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addUser: () => dispatch(addUser())\r\n});\r\n\r\nfunction RenderAccountInfo({account, transactionAcctType, jwt, props}){\r\n\r\n  const deleteAccount = async (event) => {\r\n    event.preventDefault();\r\n    await axios.delete(baseUrlAWS + 'api/Me/Delete/' + account.id,\r\n                 { headers: {\"Authorization\" : `Bearer ${jwt}`}});\r\n    axios.get(baseUrlAWS + 'api/Me/', { headers: {\"Authorization\" : `Bearer ${jwt}`}})\r\n        .then((response) => {\r\n           console.log(response);\r\n            props.dispatch(addUser(response.data));\r\n        });\r\n  }\r\n\r\n  let date = new Date(account.openedOn);\r\n  let formattedDate = format(date, \"MMMM do, yyyy h:mma\");\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <Media body className=\"ml-2\">\r\n            <Media heading>Account #{account.id}</Media>\r\n            <p>Balance: ${account.balance.toLocaleString()}</p>\r\n            <p>Opened on: {formattedDate}</p>\r\n          </Media>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <Button block onClick={deleteAccount} color=\"danger\">Delete Account</Button>\r\n          <p />\r\n          <TransactionComponent transactionAcctType={transactionAcctType} account={account} jwt={jwt} />\r\n          <p />\r\n          <TransferComponent account={account} jwt={jwt} />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <TransactionHistoryComponent account={account} transactionAcctType={transactionAcctType} />\r\n      </div>\r\n    <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Accounts(props) {\r\n\r\n  const deleteAccounts = async (event) => {\r\n    event.preventDefault();\r\n    await axios.delete(baseUrlAWS + 'api/Me/Delete/' + props.accounts.id,\r\n                 { headers: {\"Authorization\" : `Bearer ${props.jwt}`}});\r\n    axios.get(baseUrlAWS + 'api/Me/', { headers: {\"Authorization\" : `Bearer ${props.jwt}`}})\r\n        .then((response) => {\r\n           console.log(response);\r\n            props.dispatch(addUser(response.data));\r\n        });\r\n  }\r\n\r\n  if(props.accounts !== null) {\r\n    if(Array.isArray(props.accounts)){\r\n      let sum = 0;\r\n      props.accounts.map((account) => {\r\n        sum += parseInt(account.balance);\r\n      });\r\n      const summary = props.accounts.map((account) => {\r\n\r\n      return (\r\n          <RenderAccountInfo key={account.id} accounts={props.accounts} account={account} transactionAcctType={props.transactionAcctType} jwt={props.jwt} props={props} />\r\n      );\r\n    });\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <h2 id=\"title\">{props.accountType}</h2>\r\n          <hr />\r\n          <h2>Total Balance: ${sum.toLocaleString()}</h2>\r\n          <hr />\r\n        </div>\r\n        <Media list>\r\n            {summary}\r\n        </Media>\r\n      </div>\r\n    );\r\n  } else {\r\n    let date = new Date(props.accounts.openedOn);\r\n    let formattedDate = format(date, \"MMMM do, yyyy H:mma\");\r\n      return(\r\n        <div>\r\n          <div>\r\n            <h2 id=\"title\">{props.accountType}</h2>\r\n            <hr />\r\n            <h2>Total Balance: ${props.accounts.balance}</h2>\r\n            <hr />\r\n          </div>\r\n          <Media>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  <Media body className=\"ml-2\">\r\n                    <Media heading>Account #{props.accounts.id}</Media>\r\n                    <p>Balance: ${props.accounts.balance.toLocaleString()}</p>\r\n                    <p>Opened on: {formattedDate}</p>\r\n                  </Media>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                  <Button block onClick={deleteAccounts} color=\"danger\">Delete Account</Button>\r\n                  <p />\r\n                  <TransactionComponent transactionAcctType={props.transactionAcctType} account={props.accounts} jwt={props.jwt} />\r\n                  <p />\r\n                  <TransferComponent account={props.accounts} jwt={props.jwt} />\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <TransactionHistoryComponent account={props.accounts} transactionAcctType={props.transactionAcctType} />\r\n              </div>\r\n            </div>\r\n          </Media>\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    return(\r\n      <div>\r\n        <h1>No account data.</h1>\r\n        <p>Please create an account of this type first.</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapDispatchToProps)(Accounts));\r\n","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\AccountModal.js",["142","143","144","145","146","147","148","149"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, Input } from 'reactstrap';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addUser } from '../redux/ActionCreators';\r\nimport { baseUrlAWS } from '../shared/baseUrl';\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addUser: () => dispatch(addUser())\r\n});\r\n\r\n\r\nclass AccountModal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      accountType: 'CheckingAccount',\r\n      balance: null,\r\n      modal: false\r\n    }\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        const data = this.state;\r\n        if(this.props.user.dbaCheckings.length == 3 && this.state.accountType == 'DBACheckingAccount'){\r\n            alert(\"Only 3 Business Checking Accounts allowed. Account not created.\");\r\n        } else if(this.props.user.savingsAccounts != null && this.state.accountType == 'SavingsAccounts'){\r\n            alert(\"Only 1 Savings Account allowed. Account not created.\");\r\n        } else if(this.props.user.checkingAccounts != null && this.state.accountType == 'CheckingAccount'){\r\n            alert(\"Only 1 Personal Checking Account allowed. Account not created.\");\r\n        }else if(this.props.user.ira != null && this.state.accountType == 'IRA'){\r\n            alert(\"Only 1 Regular IRA Account allowed. Account not created.\");\r\n        } else if(this.props.user.rolloverIra != null && this.state.accountType == 'RolloverIRA'){\r\n            alert(\"Only 1 Rollover IRA Account allowed. Account not created.\");\r\n        } else if(this.props.user.rothIra != null && this.state.accountType == 'RothIRA'){\r\n            alert(\"Only 1 Roth IRA Account allowed. Account not created.\");\r\n        }else{\r\n            console.log(this.state);\r\n            await axios.post(baseUrlAWS + 'api/Me/' + this.state.accountType, this.state,\r\n                         { headers: {\"Authorization\" : `Bearer ${this.props.jwt.jwt}`}});\r\n            axios.get(baseUrlAWS + 'api/Me/', { headers: {\"Authorization\" : `Bearer ${this.props.jwt.jwt}`}})\r\n                .then((response) => {\r\n                    console.log(response);\r\n                    this.props.dispatch(addUser(response.data));\r\n                });\r\n        }\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        event.preventDefault()\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n    toggle = () => {\r\n      this.setState({\r\n        modal: !this.state.modal\r\n      });\r\n    }\r\n\r\n  render() {\r\n\r\n  return (\r\n    <div>\r\n      <Button block color=\"success\" onClick={this.toggle}>Add Account</Button>\r\n      <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n        <ModalHeader>Add Account </ModalHeader>\r\n        <ModalBody>\r\n          <p>Specify the account type, then click \"Create.\"</p>\r\n          <Form onSubmit={this.handleSubmit}>\r\n        <Input type=\"select\" name=\"accountType\" onChange={this.handleInputChange}>\r\n          <option onClick={this.setAccountType} value=\"CheckingAccount\">Personal Checking Account</option>\r\n          <option onClick={this.setAccountType} value=\"DBACheckingAccount\">Business Checking Account</option>\r\n          <option onClick={this.setAccountType} value=\"SavingsAccounts\">Savings Account</option>\r\n          <option onClick={this.setAccountType} value=\"RolloverIRA\">Rollover IRA Account</option>\r\n          <option onClick={this.setAccountType} value=\"RothIRA\">Roth IRA Account</option>\r\n          <option onClick={this.setAccountType} value=\"IRA\">IRA Account</option>\r\n        </Input>\r\n        <Input type=\"text\" name=\"balance\" onChange={this.handleInputChange} />\r\n        <Button color=\"success\" type=\"submit\" onClick={this.toggle}>Create</Button>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n\r\n          <Button color=\"danger\" onClick={this.toggle}>Cancel</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n}\r\nexport default withRouter(connect(mapDispatchToProps)(AccountModal));\r\n","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\TransactionComponent.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\TransactionHistoryComponent.js",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166"],"import React from 'react';\r\nimport { Media, Row, Table, Button } from 'reactstrap';\r\nimport { format } from 'date-fns';\r\n\r\nfunction RenderTransaction({transaction}) {\r\n  let date = new Date(transaction.transactionDate);\r\n  let formattedDate = format(date, \"MMMM do, yyyy h:mma\");\r\n  return (\r\n    <tr>\r\n      <td>{formattedDate}</td>\r\n      <td>{transaction.type}</td>\r\n      <td>${transaction.amount}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction TransactionHistoryComponent(props) {\r\n\r\n  if (props.transactionAcctType == 'checking') {\r\n    if (props.account.checkingtransactions.length == 0) return (\r\n      <div>\r\n        <p>No transactions under this account.</p>\r\n      </div>\r\n    );\r\n    else {\r\n       const summary = props.account.checkingtransactions.map((transaction) => {\r\n\r\n         return (\r\n           <RenderTransaction key={transaction.id} transaction={transaction} />\r\n         )\r\n\r\n       });\r\n      return (\r\n        <div>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Transaction Date</th>\r\n                <th>Transaction Type</th>\r\n                <th>Transaction Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody list>\r\n              {summary}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  else if (props.transactionAcctType == 'dbaChecking') {\r\n    if (props.account.dbatransactions.length == 0) return (\r\n      <div>\r\n        <p>No transactions under this account.</p>\r\n      </div>\r\n    );\r\n    else {\r\n      const summary = props.account.dbatransactions.map((transaction) => {\r\n        return (\r\n          <RenderTransaction key={transaction.id} transaction={transaction} />\r\n        )\r\n      });\r\n      return (\r\n        <div>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Transaction Date</th>\r\n                <th>Transaction Type</th>\r\n                <th>Transaction Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody list>\r\n              {summary}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  else if (props.transactionAcctType == 'savings') {\r\n    if (props.account.savingstransactions.length == 0) return (\r\n      <div>\r\n        <p>No transactions under this account.</p>\r\n      </div>\r\n    );\r\n    else {\r\n      const summary = props.account.savingstransactions.map((transaction) => {\r\n        return (\r\n          <RenderTransaction key={transaction.id} transaction={transaction} />\r\n        )\r\n      });\r\n      return (\r\n        <div>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Transaction Date</th>\r\n                <th>Transaction Type</th>\r\n                <th>Transaction Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody list>\r\n              {summary}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  else if (props.transactionAcctType == 'cdAccount') {\r\n    if (props.account.cdAccoountTransactions.length == 0) return (\r\n      <div>\r\n        <p>No transactions under this account.</p>\r\n      </div>\r\n    );\r\n    else {\r\n      const summary = props.account.cdAccoountTransactions.map((transaction) => {\r\n        return (\r\n          <RenderTransaction key={transaction.id} transaction={transaction} />\r\n        )\r\n      });\r\n      return (\r\n        <div>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Transaction Date</th>\r\n                <th>Transaction Type</th>\r\n                <th>Transaction Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody list>\r\n              {summary}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  else if (props.transactionAcctType == 'ira') {\r\n    if (props.account.iraTransactions.length == 0) return (\r\n      <div>\r\n        <p>No transactions under this account.</p>\r\n      </div>\r\n    );\r\n    else {\r\n      const summary = props.account.iraTransactions.map((transaction) => {\r\n        return (\r\n          <RenderTransaction key={transaction.id} transaction={transaction} />\r\n        )\r\n      });\r\n      return (\r\n        <div>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Transaction Date</th>\r\n                <th>Transaction Type</th>\r\n                <th>Transaction Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody list>\r\n              {summary}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  else if (props.transactionAcctType == 'rolloverIRA') {\r\n    if (props.account.rolloverIRATransactions.length == 0) return (\r\n      <div>\r\n        <p>No transactions under this account.</p>\r\n      </div>\r\n    );\r\n    else {\r\n      const summary = props.account.rolloverIRATransactions.map((transaction) => {\r\n        return (\r\n          <RenderTransaction key={transaction.id} transaction={transaction} />\r\n        )\r\n      });\r\n      return (\r\n        <div>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Transaction Date</th>\r\n                <th>Transaction Type</th>\r\n                <th>Transaction Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody list>\r\n              {summary}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  else if (props.transactionAcctType == 'rothIRA') {\r\n    if (props.account.rothIRATransactions.length == 0) return (\r\n      <div>\r\n        <p>No transactions under this account.</p>\r\n      </div>\r\n    );\r\n    else {\r\n      const summary = props.account.rothIRATransactions.map((transaction) => {\r\n        return (\r\n          <RenderTransaction key={transaction.id} transaction={transaction} />\r\n        )\r\n      });\r\n      return (\r\n        <div>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Transaction Date</th>\r\n                <th>Transaction Type</th>\r\n                <th>Transaction Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody list>\r\n              {summary}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  else {\r\n    return (\r\n      <div>\r\n      <p>wow</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TransactionHistoryComponent;\r\n","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\TransferComponent.js",[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":2,"column":28,"nodeType":"173","messageId":"174","endLine":2,"endColumn":36},{"ruleId":"171","severity":1,"message":"175","line":6,"column":28,"nodeType":"173","messageId":"174","endLine":6,"endColumn":33},{"ruleId":"171","severity":1,"message":"176","line":6,"column":35,"nodeType":"173","messageId":"174","endLine":6,"endColumn":46},{"ruleId":"171","severity":1,"message":"177","line":6,"column":48,"nodeType":"173","messageId":"174","endLine":6,"endColumn":57},{"ruleId":"171","severity":1,"message":"178","line":6,"column":59,"nodeType":"173","messageId":"174","endLine":6,"endColumn":70},{"ruleId":"171","severity":1,"message":"179","line":10,"column":5,"nodeType":"173","messageId":"174","endLine":10,"endColumn":15},{"ruleId":"171","severity":1,"message":"180","line":12,"column":7,"nodeType":"173","messageId":"174","endLine":12,"endColumn":16},{"ruleId":"171","severity":1,"message":"181","line":13,"column":7,"nodeType":"173","messageId":"174","endLine":13,"endColumn":16},{"ruleId":"171","severity":1,"message":"182","line":14,"column":7,"nodeType":"173","messageId":"174","endLine":14,"endColumn":17},{"ruleId":"171","severity":1,"message":"172","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":25},{"ruleId":"171","severity":1,"message":"175","line":5,"column":51,"nodeType":"173","messageId":"174","endLine":5,"endColumn":56},{"ruleId":"171","severity":1,"message":"176","line":5,"column":58,"nodeType":"173","messageId":"174","endLine":5,"endColumn":69},{"ruleId":"171","severity":1,"message":"177","line":5,"column":71,"nodeType":"173","messageId":"174","endLine":5,"endColumn":80},{"ruleId":"171","severity":1,"message":"178","line":5,"column":82,"nodeType":"173","messageId":"174","endLine":5,"endColumn":93},{"ruleId":"171","severity":1,"message":"183","line":5,"column":95,"nodeType":"173","messageId":"174","endLine":5,"endColumn":99},{"ruleId":"171","severity":1,"message":"184","line":5,"column":101,"nodeType":"173","messageId":"174","endLine":5,"endColumn":106},{"ruleId":"171","severity":1,"message":"185","line":5,"column":108,"nodeType":"173","messageId":"174","endLine":5,"endColumn":113},{"ruleId":"171","severity":1,"message":"186","line":8,"column":9,"nodeType":"173","messageId":"174","endLine":8,"endColumn":20},{"ruleId":"171","severity":1,"message":"187","line":17,"column":20,"nodeType":"173","messageId":"174","endLine":17,"endColumn":26},{"ruleId":"171","severity":1,"message":"188","line":21,"column":3,"nodeType":"173","messageId":"174","endLine":21,"endColumn":12},{"ruleId":"171","severity":1,"message":"189","line":113,"column":9,"nodeType":"173","messageId":"174","endLine":113,"endColumn":13},{"ruleId":"171","severity":1,"message":"190","line":127,"column":15,"nodeType":"173","messageId":"174","endLine":127,"endColumn":18},{"ruleId":"171","severity":1,"message":"191","line":3,"column":17,"nodeType":"173","messageId":"174","endLine":3,"endColumn":20},{"ruleId":"171","severity":1,"message":"192","line":3,"column":22,"nodeType":"173","messageId":"174","endLine":3,"endColumn":27},{"ruleId":"193","severity":1,"message":"194","line":74,"column":36,"nodeType":"195","messageId":"196","endLine":74,"endColumn":38},{"ruleId":"171","severity":1,"message":"189","line":29,"column":15,"nodeType":"173","messageId":"174","endLine":29,"endColumn":19},{"ruleId":"197","severity":1,"message":"198","line":30,"column":48,"nodeType":"199","messageId":"200","endLine":30,"endColumn":50},{"ruleId":"197","severity":1,"message":"198","line":30,"column":79,"nodeType":"199","messageId":"200","endLine":30,"endColumn":81},{"ruleId":"197","severity":1,"message":"198","line":32,"column":85,"nodeType":"199","messageId":"200","endLine":32,"endColumn":87},{"ruleId":"197","severity":1,"message":"198","line":34,"column":86,"nodeType":"199","messageId":"200","endLine":34,"endColumn":88},{"ruleId":"197","severity":1,"message":"198","line":36,"column":72,"nodeType":"199","messageId":"200","endLine":36,"endColumn":74},{"ruleId":"197","severity":1,"message":"198","line":38,"column":81,"nodeType":"199","messageId":"200","endLine":38,"endColumn":83},{"ruleId":"197","severity":1,"message":"198","line":40,"column":77,"nodeType":"199","messageId":"200","endLine":40,"endColumn":79},{"ruleId":"171","severity":1,"message":"201","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":15},{"ruleId":"171","severity":1,"message":"191","line":2,"column":17,"nodeType":"173","messageId":"174","endLine":2,"endColumn":20},{"ruleId":"171","severity":1,"message":"202","line":2,"column":29,"nodeType":"173","messageId":"174","endLine":2,"endColumn":35},{"ruleId":"197","severity":1,"message":"198","line":19,"column":33,"nodeType":"199","messageId":"200","endLine":19,"endColumn":35},{"ruleId":"197","severity":1,"message":"198","line":20,"column":51,"nodeType":"199","messageId":"200","endLine":20,"endColumn":53},{"ruleId":"197","severity":1,"message":"198","line":52,"column":38,"nodeType":"199","messageId":"200","endLine":52,"endColumn":40},{"ruleId":"197","severity":1,"message":"198","line":53,"column":46,"nodeType":"199","messageId":"200","endLine":53,"endColumn":48},{"ruleId":"197","severity":1,"message":"198","line":83,"column":38,"nodeType":"199","messageId":"200","endLine":83,"endColumn":40},{"ruleId":"197","severity":1,"message":"198","line":84,"column":50,"nodeType":"199","messageId":"200","endLine":84,"endColumn":52},{"ruleId":"197","severity":1,"message":"198","line":114,"column":38,"nodeType":"199","messageId":"200","endLine":114,"endColumn":40},{"ruleId":"197","severity":1,"message":"198","line":115,"column":53,"nodeType":"199","messageId":"200","endLine":115,"endColumn":55},{"ruleId":"197","severity":1,"message":"198","line":145,"column":38,"nodeType":"199","messageId":"200","endLine":145,"endColumn":40},{"ruleId":"197","severity":1,"message":"198","line":146,"column":46,"nodeType":"199","messageId":"200","endLine":146,"endColumn":48},{"ruleId":"197","severity":1,"message":"198","line":176,"column":38,"nodeType":"199","messageId":"200","endLine":176,"endColumn":40},{"ruleId":"197","severity":1,"message":"198","line":177,"column":54,"nodeType":"199","messageId":"200","endLine":177,"endColumn":56},{"ruleId":"197","severity":1,"message":"198","line":207,"column":38,"nodeType":"199","messageId":"200","endLine":207,"endColumn":40},{"ruleId":"197","severity":1,"message":"198","line":208,"column":50,"nodeType":"199","messageId":"200","endLine":208,"endColumn":52},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'maxLength' is assigned a value but never used.","'minLength' is assigned a value but never used.","'validEmail' is assigned a value but never used.","'Form' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'useDispatch' is defined but never used.","'Router' is defined but never used.","'useParams' is defined but never used.","'data' is assigned a value but never used.","'url' is assigned a value but never used.","'Row' is defined but never used.","'Table' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Media' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]