[{"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\index.js":"1","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\reportWebVitals.js":"2","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\App.js":"3","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\configureStore.js":"4","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\About.js":"5","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\ActionCreators.js":"6","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Home.js":"7","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Team.js":"8","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\HeaderComponent.js":"9","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Support.js":"10","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Register.js":"11","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\MyAccount.js":"12","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\FooterComponent.js":"13","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\team.js":"14","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\forms.js":"15","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\jwt.js":"16","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\user.js":"17","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\Actions.js":"18","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\services\\UserServices.js":"19","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\services\\TeamServices.js":"20","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\shared\\baseUrl.js":"21","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\accounts\\actions.js":"22","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\AccountComponent.js":"23","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\AccountModal.js":"24","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\TransactionComponent.js":"25","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\TransactionHistoryComponent.js":"26","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\TransferComponent.js":"27"},{"size":836,"mtime":1613113542230,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":1871,"mtime":1613446274141,"results":"31","hashOfConfig":"29"},{"size":901,"mtime":1613459487969,"results":"32","hashOfConfig":"29"},{"size":2288,"mtime":1613079254844,"results":"33","hashOfConfig":"29"},{"size":1639,"mtime":1613847262770,"results":"34","hashOfConfig":"29"},{"size":3033,"mtime":1613376602030,"results":"35","hashOfConfig":"29"},{"size":1085,"mtime":1612569772591,"results":"36","hashOfConfig":"29"},{"size":1094,"mtime":1613461623392,"results":"37","hashOfConfig":"29"},{"size":4552,"mtime":1613262500308,"results":"38","hashOfConfig":"29"},{"size":7532,"mtime":1613460606655,"results":"39","hashOfConfig":"29"},{"size":6973,"mtime":1613970002622,"results":"40","hashOfConfig":"29"},{"size":524,"mtime":1612570729754,"results":"41","hashOfConfig":"29"},{"size":543,"mtime":1613162514833,"results":"42","hashOfConfig":"29"},{"size":381,"mtime":1613720773618,"results":"43","hashOfConfig":"29"},{"size":340,"mtime":1613344677446,"results":"44","hashOfConfig":"29"},{"size":2095,"mtime":1613339770098,"results":"45","hashOfConfig":"29"},{"size":1730,"mtime":1613260708314,"results":"46","hashOfConfig":"29"},{"size":930,"mtime":1613462591568,"results":"47","hashOfConfig":"29"},{"size":203,"mtime":1613116263310,"results":"48","hashOfConfig":"29"},{"size":185,"mtime":1613338054960,"results":"49","hashOfConfig":"29"},{"size":1141,"mtime":1613167029334,"results":"50","hashOfConfig":"29"},{"size":5057,"mtime":1614016927431,"results":"51","hashOfConfig":"29"},{"size":4252,"mtime":1614018270763,"results":"52","hashOfConfig":"29"},{"size":3015,"mtime":1613967556975,"results":"53","hashOfConfig":"29"},{"size":6333,"mtime":1613962964612,"results":"54","hashOfConfig":"29"},{"size":2828,"mtime":1614018887956,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1aaf9vk",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\index.js",[],["115","116"],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\reportWebVitals.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\App.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\configureStore.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\About.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\ActionCreators.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Home.js",["117","118","119","120","121","122"],"import axios from 'axios';\r\nimport React, { Component, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addJWT, addUser } from '../redux/ActionCreators';\r\nimport { Form } from 'react-redux-form';\r\nimport { Button, Col, Row, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { baseUrlAWS } from '../shared/baseUrl';\r\nimport {Redirect, withRouter, Link }from 'react-router-dom';\r\n\r\nlet isLoggedIn = false;\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addUser: () => dispatch(addUser()),\r\n  addJWT: () => dispatch(addJWT())\r\n});\r\n\r\nclass Home extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      err: '',\r\n      userName: '',\r\n      password: '',\r\n      isLoggedIn: false\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit = async (event) =>{\r\n//       event.preventDefault();\r\n       const user = this.state.userName;\r\n       const pass = this.state.password;\r\n       const jwt = await axios.post(baseUrlAWS + 'api/authenticate', { userName: user, password: pass });\r\n       alert(JSON.stringify(jwt.data.jwt));\r\n       this.props.dispatch(addJWT(jwt.data.jwt));\r\n       axios.get(baseUrlAWS + 'api/Me', { headers: {\"Authorization\" : `Bearer ${jwt.data.jwt}`}})\r\n           .then((response) => this.props.dispatch(addUser(response.data)));\r\n    }\r\n\r\n\r\n    handleInputChange(event) {\r\n       this.setState({\r\n           [event.target.name]: event.target.value\r\n       });\r\n   }\r\n\r\n\r\n\r\n  render () {\r\n\r\n    const { isLoggedIn } = this.props;\r\n    //\r\n    if (isLoggedIn){\r\n       return(<Redirect to=\"/account\" />)\r\n    } else {\r\n\r\n\r\n    return (\r\n      <div id=\"bg\" className=\"container\">\r\n        <h2 id=\"title\">We love our customers and their money</h2>\r\n        <hr />\r\n        <div style={{padding: '5px'}} className=\"row align-items-center\">\r\n          <div className=\"col-lg-4 offset-lg-4 col-md-6 offset-md-3 col-8 offset-2\" id=\"inputBox\">\r\n          <h4>Welcome Back!</h4>\r\n\r\n          <Form model=\"signin\" onSubmit={this.handleSubmit}>\r\n\r\n          <input type=\"text\" model=\".userName\" name=\"userName\" value={this.state.userName} onChange={this.handleInputChange}/>\r\n\r\n          <input type=\"password\" model=\".password\" name= \"password\" value={this.state.password} onChange={this.handleInputChange}/>\r\n\r\n            <Row className=\"form-group\">\r\n              <Col xs={12}>\r\n                <Button type=\"submit\" block color=\"primary\">Login</Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n          <div className=\"col-8 offset-2\">\r\n          <p />\r\n            <Link style={{backgroundColor: 'white', borderRadius: '15px', fontSize: '14px'}} to=\"/register\">No account? Register!</Link>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  }\r\n}\r\n\r\n//export default connect(mapStateToProps, mapDispatchToProps)(Home);\r\nexport default withRouter(connect(mapDispatchToProps)(Home));\r\n","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Team.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\HeaderComponent.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Support.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\Register.js",["123","124","125"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../index.css';\r\nimport { Form, Errors } from 'react-redux-form';\r\nimport { Button, Col, Row } from 'reactstrap';\r\nimport { addUser } from '../redux/ActionCreators';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect, withRouter }from 'react-router-dom';\r\nimport { baseUrlAWS } from '../shared/baseUrl';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addUser: () => dispatch(addUser())\r\n});\r\n\r\nfunction returnHome() {\r\n\r\n  return(\r\n    <Redirect to={\"/\"} />\r\n  );\r\n}\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName: '',\r\n      password: '',\r\n      firstName: '',\r\n      middleName: '',\r\n      lastName: '',\r\n      email: '',\r\n      accountOpened: new Date(),\r\n      birthDate: '',\r\n      ssn: null\r\n    }\r\n//    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit = async (event) => {\r\n//        event.preventDefault()\r\n\r\n        const data = this.state;\r\n        alert(JSON.stringify(data));\r\n\r\n            data.dob = new Date(data.birthDate);\r\n            axios.post(baseUrlAWS + 'api/authenticate/createUser', data);\r\n            returnHome();\r\n//            alert(JSON.stringify(data));\r\n\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        event.preventDefault()\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n  render() {\r\n\r\n\r\n  return(\r\n    <div className=\"container col-6\">\r\n      <h2 id=\"title\">One Step Closer to a Merit America</h2>\r\n      <hr />\r\n      <div id=\"inputBox\">\r\n      <Form model=\"register\" onSubmit={this.handleSubmit}>\r\n        <Row className=\"form-group\" xs={6}>\r\n          <Col xs={12}>\r\n            <input type=\"text\"\r\n              model=\".firstName\"\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              placeholder=\"First Name*\"\r\n              className=\"form-control\"\r\n              validators={{required}}\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <Errors\r\n              className=\"text-danger\"\r\n              model=\".firstName\"\r\n              show=\"touched\"\r\n              messages={{\r\n                required: 'Required. ',\r\n                minLength: 'Must be greater than 2 characters. ',\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"form-group\" xs={6}>\r\n          <Col xs={12}>\r\n            <input type=\"text\"\r\n              model=\".middleName\"\r\n              id=\"middleName\"\r\n              name=\"middleName\"\r\n              placeholder=\"Middle Name\"\r\n              className=\"form-control\"\r\n              onChange={this.handleInputChange}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"form-group\" xs={6}>\r\n          <Col xs={12}>\r\n            <input type=\"text\"\r\n              model=\".lastName\"\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              placeholder=\"Last Name*\"\r\n              className=\"form-control\"\r\n              validators={{required}}\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <Errors\r\n              className=\"text-danger\"\r\n              model=\".lastName\"\r\n              show=\"touched\"\r\n              messages={{\r\n                required: 'Required. ',\r\n                minLength: 'Must be greater than 2 characters. ',\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"form-group\" xs={6}>\r\n          <Col xs={12}>\r\n            <input type='date'\r\n              model=\".birthDate\"\r\n              id=\"birthDate\"\r\n              name=\"birthDate\"\r\n              placeholder=\"Date of Birth*\"\r\n              className=\"form-control\"\r\n              validators={{required}}\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <Errors\r\n              className=\"text-danger\"\r\n              model=\".dob\"\r\n              show=\"touched\"\r\n              messages={{\r\n                required: 'Required. ',\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"form-group\" xs={6}>\r\n          <Col xs={12}>\r\n            <input type=\"number\"\r\n              model=\".ssn\"\r\n              id=\"ssn\"\r\n              name=\"ssn\"\r\n              placeholder=\"SSN*\"\r\n              className=\"form-control\"\r\n              validators={{required}}\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <Errors\r\n              className=\"text-danger\"\r\n              model=\".ssn\"\r\n              show=\"touched\"\r\n              messages={{\r\n                required: 'Required. ',\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"form-group\" xs={6}>\r\n          <Col xs={12}>\r\n            <input type=\"text\"\r\n              model=\".userName\"\r\n              id=\"userName\"\r\n              name=\"userName\"\r\n              placeholder=\"Username*\"\r\n              className=\"form-control\"\r\n              validators={{required}}\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <Errors\r\n              className=\"text-danger\"\r\n              model=\".userName\"\r\n              show=\"touched\"\r\n              messages={{\r\n                required: 'Required. ',\r\n                minLength: 'Must be greater than 2 characters. ',\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"form-group\" xs={6}>\r\n          <Col xs={12}>\r\n            <input type=\"text\"\r\n              model=\".email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email*\"\r\n              className=\"form-control\"\r\n              validators={{required}}\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <Errors\r\n              className=\"text-danger\"\r\n              model=\".email\"\r\n              show=\"touched\"\r\n              messages={{\r\n                required: 'Required. ',\r\n                minLength: 'Must be greater than 2 characters. ',\r\n                maxLength: 'Must be shorter than 16 characters. '\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"form-group\">\r\n          <Col xs={12}>\r\n            <input type=\"password\"\r\n              model=\".password\"\r\n              id=\"password\"\r\n              className=\"form-control\"\r\n              name=\"password\"\r\n              placeholder=\"Password*\"\r\n              validators={{required}}\r\n              onChange={this.handleInputChange}\r\n            />\r\n            <Errors\r\n              className=\"text-danger\"\r\n              model=\".password\"\r\n              show=\"touched\"\r\n              messages={{\r\n                required: 'Required. ',\r\n                minLength: 'Must be greater than 2 characters. ',\r\n                maxLength: 'Must be shorter than 17 characters. '\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"form-group\">\r\n          <Col xs={12}>\r\n            <Button type=\"submit\" block color=\"primary\">Register</Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapDispatchToProps)(Register));\r\n","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\pages\\MyAccount.js",["126","127","128","129","130","131","132","133","134","135","136","137","138"],"import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { baseUrlAWS } from '../shared/baseUrl';\r\nimport '../index.css';\r\nimport { ListGroupItem, ListGroup, Button, Table, Modal, ModalHeader, ModalBody, ModalFooter, Form, Label, Input } from 'reactstrap';\r\n//import { Link } from 'react-router-dom';\r\nimport { PersonCircle, Gear, ArrowClockwise } from 'react-bootstrap-icons';\r\nimport {useDispatch, connect} from 'react-redux';\r\nimport Accounts from '../components/AccountComponent';\r\nimport { addUser } from '../redux/ActionCreators';\r\nimport AccountModal from '../components/AccountModal';\r\n\r\n\r\n//import { getChecking } from '../redux/accounts/actions';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useParams,\r\n  useRouteMatch\r\n} from \"react-router-dom\";\r\n\r\nexport const CheckingAccount = () => {\r\n\r\n}\r\nexport const BusinessAccounts = () => {\r\n\r\n  return (\r\n    <>my acccount</>\r\n  )\r\n}\r\nexport const SavingsAccount = () => {\r\n\r\n  return (\r\n    <>my acccount</>\r\n  )\r\n}\r\n\r\nexport const CDAccounts = () => {\r\n\r\n  return (\r\n    <>my acccount</>\r\n  )\r\n}\r\n\r\nexport const IRAAccount = (store) => {\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h3> </h3>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h2>Current Balance</h2>\r\n          <h1>$100.00</h1>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <Button block color=\"danger\">Delete Account</Button>\r\n          <Button block color=\"primary\">Create Transaction</Button>\r\n          <Button block color=\"warning\">Delete Transaction</Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\" >\r\n        <div className=\"col\">\r\n        <hr />\r\n        <Table striped dark>\r\n    <thead>\r\n      <tr>\r\n        <th>Transaction</th>\r\n        <th>Amount</th>\r\n        <th>Date</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr>\r\n        <td>Mac Dondald's</td>\r\n        <td>-$652.00</td>\r\n        <td>10/10/2019</td>\r\n      </tr>\r\n      <tr>\r\n        <td>What a Burger</td>\r\n        <td>-$889.99</td>\r\n        <td>12/10/2020</td>\r\n      </tr>\r\n    </tbody>\r\n  </Table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const RothIRA = () => {\r\n\r\n  return (\r\n    <>my acccount</>\r\n  )\r\n}\r\n\r\nexport const RolloverIRA = () => {\r\n\r\n  return (\r\n    <>my acccount</>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nfunction MyAccount(props) {\r\n\r\n  const data = {\r\n\r\n  }\r\n\r\n  const user = props.user;\r\n  const jwt = props.jwt.jwt;\r\n\r\n  const reloadUser = async (event) => {\r\n//    alert(baseUrlAWS + 'api/Me ' + `Bearer ${props.jwt.jwt}`);\r\n    axios.get(baseUrlAWS + 'api/Me', { headers: {\"Authorization\" : `Bearer ${jwt}`}})\r\n    .then((response) => props.dispatch(addUser(response.data)));\r\n\r\n  }\r\n\r\n  let { path, url } = useRouteMatch();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Button onClick={reloadUser}><ArrowClockwise /> Reload</Button>\r\n      <hr />\r\n      <div id=\"maxheight\" className=\"row\">\r\n      <ListGroup>\r\n      <AccountModal jwt={props.jwt} user={props.user} />\r\n      <p/>\r\n        <ListGroupItem style={{backgroundColor: '#50AEEC', color: 'black', textAlign: 'center'}}>\r\n          <PersonCircle />\r\n          <> My Accounts </>\r\n        </ListGroupItem>\r\n        <Link to={`/account/checking-accounts`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            Checking Account\r\n          </ListGroupItem>\r\n        </Link>\r\n\r\n        <Link to={`/account/dba-accounts`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            Business Accounts\r\n            </ListGroupItem>\r\n        </Link>\r\n\r\n        <Link to={`/account/savings-accounts`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            Saving Account\r\n          </ListGroupItem>\r\n        </Link>\r\n\r\n        <ListGroupItem style={{backgroundColor: '#50AEEC', color: 'black', textAlign: 'center'}}>\r\n          <PersonCircle />\r\n          <> My Investments </>\r\n\r\n        </ListGroupItem>\r\n\r\n        <Link to={`/account/cd-accounts`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            CD Accounts\r\n            </ListGroupItem>\r\n        </Link>\r\n\r\n        <Link to={`/account/ira-accounts`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            IRA Account\r\n            </ListGroupItem>\r\n        </Link>\r\n\r\n        <Link to={`/account/roth-ira`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            Roth IRA\r\n          </ListGroupItem>\r\n        </Link>\r\n        <Link to={`/account/rollover-ira`}>\r\n          <ListGroupItem tag=\"button\" action>\r\n            Rollover IRA\r\n          </ListGroupItem>\r\n        </Link>\r\n\r\n        {/* <ListGroupItem tag=\"button\" action>Account</ListGroupItem> */}\r\n        <ListGroupItem tag=\"button\" action>CD Rates</ListGroupItem>\r\n        <ListGroupItem disabled style={{backgroundColor: '#50AEEC', color: 'black'}}><Gear /> Settings</ListGroupItem>\r\n        <ListGroupItem tag=\"button\" action>Profile</ListGroupItem>\r\n        <ListGroupItem tag=\"button\" action>Account Data</ListGroupItem>\r\n      </ListGroup>\r\n\r\n      <div className=\"col-8\">\r\n      <Switch>\r\n        {/* <Route exact path={path}>\r\n          < />\r\n        </Route> */}\r\n        <Route path={`${path}/checking-accounts`} component={() => <Accounts user={props.user} transactionAcctType=\"checking\" accountType=\"Personal Checking Account\" jwt={jwt} accounts={user.checkingAccounts} />} />\r\n\r\n        <Route path={`${path}/dba-accounts`} component={() => <Accounts user={props.user} transactionAcctType=\"dbaChecking\" accountType=\"Business Accounts\" jwt={jwt} accounts={user.dbaCheckings} />} />\r\n\r\n        <Route path={`${path}/savings-accounts`} component={() => <Accounts user={props.user} transactionAcctType=\"savings\" accountType=\"Savings Account\" jwt={jwt} accounts={user.savingsAccounts} />} />\r\n\r\n        <Route path={`${path}/cd-accounts`} component={() => <Accounts user={props.user} transactionAcctType=\"cdAccount\" accountType=\"CD Account\" jwt={jwt} accounts={user.cDAccounts} />} />\r\n\r\n        <Route path={`${path}/ira-accounts`} component={() => <Accounts user={props.user} transactionAcctType=\"ira\" accountType=\"IRA Account\" jwt={jwt} accounts={user.ira} />} />\r\n\r\n        <Route path={`${path}/roth-ira`} component={() => <Accounts user={props.user} transactionAcctType=\"rothIRA\" accountType=\"Roth IRA Account\" jwt={jwt} accounts={user.rothIRA} />} />\r\n\r\n        <Route path={`${path}/rollover-ira`} component={() => <Accounts user={props.user} transactionAcctType=\"rolloverIRA\" accountType=\"Rollover IRA Account\" jwt={jwt} accounts={user.rollOverIRA} />} />\r\n\r\n      </Switch>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n const mapDispatchToProps = (dispatch) => ({\r\n   addUser: () => dispatch(addUser())\r\n });\r\n//\r\n// const mapStateToProps = (dispatch) => ({\r\n//   getChecking: (values) => { dispatch (getChecking(values))},\r\n//   user: dispatch.userStatus.userName,\r\n//   token: dispatch.userStatus.jwt\r\n// });\r\n\r\n\r\nexport default connect(mapDispatchToProps)(MyAccount);\r\n//export default MyAccount;\r\n","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\FooterComponent.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\team.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\forms.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\jwt.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\user.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\Actions.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\services\\UserServices.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\services\\TeamServices.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\shared\\baseUrl.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\redux\\accounts\\actions.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\AccountComponent.js",["139","140","141"],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\AccountModal.js",["142","143","144","145","146","147","148","149"],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\TransactionComponent.js",[],"D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\TransactionHistoryComponent.js",["150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166"],"import React from 'react';\r\nimport { Media, Row, Table, Button } from 'reactstrap';\r\nimport { format } from 'date-fns';\r\n\r\nfunction RenderTransaction({transaction}) {\r\n  let date = new Date(transaction.transactionDate);\r\n  let formattedDate = format(date, \"MMMM do, yyyy h:mma\");\r\n  return (\r\n    <tr>\r\n      <td>{formattedDate}</td>\r\n      <td>{transaction.type}</td>\r\n      <td>${transaction.amount}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nfunction TransactionHistoryComponent(props) {\r\n\r\n  if (props.transactionAcctType == 'checking') {\r\n    if (props.account.checkingtransactions.length == 0) return (\r\n      <div>\r\n        <p>No transactions under this account.</p>\r\n      </div>\r\n    );\r\n    else {\r\n       const summary = props.account.checkingtransactions.map((transaction) => {\r\n\r\n         return (\r\n           <RenderTransaction key={transaction.id} transaction={transaction} />\r\n         )\r\n\r\n       });\r\n      return (\r\n        <div>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Transaction Date</th>\r\n                <th>Transaction Type</th>\r\n                <th>Transaction Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody list>\r\n              {summary}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  else if (props.transactionAcctType == 'dbaChecking') {\r\n    if (props.account.dbatransactions.length == 0) return (\r\n      <div>\r\n        <p>No transactions under this account.</p>\r\n      </div>\r\n    );\r\n    else {\r\n      const summary = props.account.dbatransactions.map((transaction) => {\r\n        return (\r\n          <RenderTransaction key={transaction.id} transaction={transaction} />\r\n        )\r\n      });\r\n      return (\r\n        <div>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Transaction Date</th>\r\n                <th>Transaction Type</th>\r\n                <th>Transaction Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody list>\r\n              {summary}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  else if (props.transactionAcctType == 'savings') {\r\n    if (props.account.savingstransactions.length == 0) return (\r\n      <div>\r\n        <p>No transactions under this account.</p>\r\n      </div>\r\n    );\r\n    else {\r\n      const summary = props.account.savingstransactions.map((transaction) => {\r\n        return (\r\n          <RenderTransaction key={transaction.id} transaction={transaction} />\r\n        )\r\n      });\r\n      return (\r\n        <div>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Transaction Date</th>\r\n                <th>Transaction Type</th>\r\n                <th>Transaction Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody list>\r\n              {summary}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  else if (props.transactionAcctType == 'cdAccount') {\r\n    if (props.account.cdAccoountTransactions.length == 0) return (\r\n      <div>\r\n        <p>No transactions under this account.</p>\r\n      </div>\r\n    );\r\n    else {\r\n      const summary = props.account.cdAccoountTransactions.map((transaction) => {\r\n        return (\r\n          <RenderTransaction key={transaction.id} transaction={transaction} />\r\n        )\r\n      });\r\n      return (\r\n        <div>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Transaction Date</th>\r\n                <th>Transaction Type</th>\r\n                <th>Transaction Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody list>\r\n              {summary}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  else if (props.transactionAcctType == 'ira') {\r\n    if (props.account.iraTransactions.length == 0) return (\r\n      <div>\r\n        <p>No transactions under this account.</p>\r\n      </div>\r\n    );\r\n    else {\r\n      const summary = props.account.iraTransactions.map((transaction) => {\r\n        return (\r\n          <RenderTransaction key={transaction.id} transaction={transaction} />\r\n        )\r\n      });\r\n      return (\r\n        <div>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Transaction Date</th>\r\n                <th>Transaction Type</th>\r\n                <th>Transaction Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody list>\r\n              {summary}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  else if (props.transactionAcctType == 'rolloverIRA') {\r\n    if (props.account.rolloverIRATransactions.length == 0) return (\r\n      <div>\r\n        <p>No transactions under this account.</p>\r\n      </div>\r\n    );\r\n    else {\r\n      const summary = props.account.rolloverIRATransactions.map((transaction) => {\r\n        return (\r\n          <RenderTransaction key={transaction.id} transaction={transaction} />\r\n        )\r\n      });\r\n      return (\r\n        <div>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Transaction Date</th>\r\n                <th>Transaction Type</th>\r\n                <th>Transaction Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody list>\r\n              {summary}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  else if (props.transactionAcctType == 'rothIRA') {\r\n    if (props.account.rothIRATransactions.length == 0) return (\r\n      <div>\r\n        <p>No transactions under this account.</p>\r\n      </div>\r\n    );\r\n    else {\r\n      const summary = props.account.rothIRATransactions.map((transaction) => {\r\n        return (\r\n          <RenderTransaction key={transaction.id} transaction={transaction} />\r\n        )\r\n      });\r\n      return (\r\n        <div>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                <th>Transaction Date</th>\r\n                <th>Transaction Type</th>\r\n                <th>Transaction Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody list>\r\n              {summary}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  else {\r\n    return (\r\n      <div>\r\n      <p>wow</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TransactionHistoryComponent;\r\n","D:\\Users\\treev\\Documents\\React\\redux-test\\src\\components\\TransferComponent.js",[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":2,"column":28,"nodeType":"173","messageId":"174","endLine":2,"endColumn":36},{"ruleId":"171","severity":1,"message":"175","line":6,"column":28,"nodeType":"173","messageId":"174","endLine":6,"endColumn":33},{"ruleId":"171","severity":1,"message":"176","line":6,"column":35,"nodeType":"173","messageId":"174","endLine":6,"endColumn":46},{"ruleId":"171","severity":1,"message":"177","line":6,"column":48,"nodeType":"173","messageId":"174","endLine":6,"endColumn":57},{"ruleId":"171","severity":1,"message":"178","line":6,"column":59,"nodeType":"173","messageId":"174","endLine":6,"endColumn":70},{"ruleId":"171","severity":1,"message":"179","line":10,"column":5,"nodeType":"173","messageId":"174","endLine":10,"endColumn":15},{"ruleId":"171","severity":1,"message":"180","line":12,"column":7,"nodeType":"173","messageId":"174","endLine":12,"endColumn":16},{"ruleId":"171","severity":1,"message":"181","line":13,"column":7,"nodeType":"173","messageId":"174","endLine":13,"endColumn":16},{"ruleId":"171","severity":1,"message":"182","line":14,"column":7,"nodeType":"173","messageId":"174","endLine":14,"endColumn":17},{"ruleId":"171","severity":1,"message":"172","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":25},{"ruleId":"171","severity":1,"message":"175","line":5,"column":51,"nodeType":"173","messageId":"174","endLine":5,"endColumn":56},{"ruleId":"171","severity":1,"message":"176","line":5,"column":58,"nodeType":"173","messageId":"174","endLine":5,"endColumn":69},{"ruleId":"171","severity":1,"message":"177","line":5,"column":71,"nodeType":"173","messageId":"174","endLine":5,"endColumn":80},{"ruleId":"171","severity":1,"message":"178","line":5,"column":82,"nodeType":"173","messageId":"174","endLine":5,"endColumn":93},{"ruleId":"171","severity":1,"message":"183","line":5,"column":95,"nodeType":"173","messageId":"174","endLine":5,"endColumn":99},{"ruleId":"171","severity":1,"message":"184","line":5,"column":101,"nodeType":"173","messageId":"174","endLine":5,"endColumn":106},{"ruleId":"171","severity":1,"message":"185","line":5,"column":108,"nodeType":"173","messageId":"174","endLine":5,"endColumn":113},{"ruleId":"171","severity":1,"message":"186","line":8,"column":9,"nodeType":"173","messageId":"174","endLine":8,"endColumn":20},{"ruleId":"171","severity":1,"message":"187","line":17,"column":20,"nodeType":"173","messageId":"174","endLine":17,"endColumn":26},{"ruleId":"171","severity":1,"message":"188","line":21,"column":3,"nodeType":"173","messageId":"174","endLine":21,"endColumn":12},{"ruleId":"171","severity":1,"message":"189","line":113,"column":9,"nodeType":"173","messageId":"174","endLine":113,"endColumn":13},{"ruleId":"171","severity":1,"message":"190","line":127,"column":15,"nodeType":"173","messageId":"174","endLine":127,"endColumn":18},{"ruleId":"171","severity":1,"message":"191","line":3,"column":17,"nodeType":"173","messageId":"174","endLine":3,"endColumn":20},{"ruleId":"171","severity":1,"message":"192","line":3,"column":22,"nodeType":"173","messageId":"174","endLine":3,"endColumn":27},{"ruleId":"193","severity":1,"message":"194","line":74,"column":36,"nodeType":"195","messageId":"196","endLine":74,"endColumn":38},{"ruleId":"171","severity":1,"message":"189","line":29,"column":15,"nodeType":"173","messageId":"174","endLine":29,"endColumn":19},{"ruleId":"197","severity":1,"message":"198","line":30,"column":48,"nodeType":"199","messageId":"200","endLine":30,"endColumn":50},{"ruleId":"197","severity":1,"message":"198","line":30,"column":79,"nodeType":"199","messageId":"200","endLine":30,"endColumn":81},{"ruleId":"197","severity":1,"message":"198","line":32,"column":85,"nodeType":"199","messageId":"200","endLine":32,"endColumn":87},{"ruleId":"197","severity":1,"message":"198","line":34,"column":86,"nodeType":"199","messageId":"200","endLine":34,"endColumn":88},{"ruleId":"197","severity":1,"message":"198","line":36,"column":72,"nodeType":"199","messageId":"200","endLine":36,"endColumn":74},{"ruleId":"197","severity":1,"message":"198","line":38,"column":81,"nodeType":"199","messageId":"200","endLine":38,"endColumn":83},{"ruleId":"197","severity":1,"message":"198","line":40,"column":77,"nodeType":"199","messageId":"200","endLine":40,"endColumn":79},{"ruleId":"171","severity":1,"message":"201","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":15},{"ruleId":"171","severity":1,"message":"191","line":2,"column":17,"nodeType":"173","messageId":"174","endLine":2,"endColumn":20},{"ruleId":"171","severity":1,"message":"202","line":2,"column":29,"nodeType":"173","messageId":"174","endLine":2,"endColumn":35},{"ruleId":"197","severity":1,"message":"198","line":19,"column":33,"nodeType":"199","messageId":"200","endLine":19,"endColumn":35},{"ruleId":"197","severity":1,"message":"198","line":20,"column":51,"nodeType":"199","messageId":"200","endLine":20,"endColumn":53},{"ruleId":"197","severity":1,"message":"198","line":52,"column":38,"nodeType":"199","messageId":"200","endLine":52,"endColumn":40},{"ruleId":"197","severity":1,"message":"198","line":53,"column":46,"nodeType":"199","messageId":"200","endLine":53,"endColumn":48},{"ruleId":"197","severity":1,"message":"198","line":83,"column":38,"nodeType":"199","messageId":"200","endLine":83,"endColumn":40},{"ruleId":"197","severity":1,"message":"198","line":84,"column":50,"nodeType":"199","messageId":"200","endLine":84,"endColumn":52},{"ruleId":"197","severity":1,"message":"198","line":114,"column":38,"nodeType":"199","messageId":"200","endLine":114,"endColumn":40},{"ruleId":"197","severity":1,"message":"198","line":115,"column":53,"nodeType":"199","messageId":"200","endLine":115,"endColumn":55},{"ruleId":"197","severity":1,"message":"198","line":145,"column":38,"nodeType":"199","messageId":"200","endLine":145,"endColumn":40},{"ruleId":"197","severity":1,"message":"198","line":146,"column":46,"nodeType":"199","messageId":"200","endLine":146,"endColumn":48},{"ruleId":"197","severity":1,"message":"198","line":176,"column":38,"nodeType":"199","messageId":"200","endLine":176,"endColumn":40},{"ruleId":"197","severity":1,"message":"198","line":177,"column":54,"nodeType":"199","messageId":"200","endLine":177,"endColumn":56},{"ruleId":"197","severity":1,"message":"198","line":207,"column":38,"nodeType":"199","messageId":"200","endLine":207,"endColumn":40},{"ruleId":"197","severity":1,"message":"198","line":208,"column":50,"nodeType":"199","messageId":"200","endLine":208,"endColumn":52},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'maxLength' is assigned a value but never used.","'minLength' is assigned a value but never used.","'validEmail' is assigned a value but never used.","'Form' is defined but never used.","'Label' is defined but never used.","'Input' is defined but never used.","'useDispatch' is defined but never used.","'Router' is defined but never used.","'useParams' is defined but never used.","'data' is assigned a value but never used.","'url' is assigned a value but never used.","'Row' is defined but never used.","'Table' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Media' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]